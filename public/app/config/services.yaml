# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  list-visitor-ttl: '%env(int:LIST_VISITOR_TTL)%'
  list-visitor-cache-key: '%env(string:LIST_VISITOR_KEY_KEY)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  _instanceof:
    App\Common\CQRS\Handler\Contracts\CommandHandlerInterface:
      tags:
        - { name: messenger.message_handler, bus: command.bus }
    App\Common\CQRS\Handler\Contracts\QueryHandlerInterface:
      tags:
        - { name: messenger.message_handler, bus: query.bus }
    App\Common\CQRS\Handler\Contracts\EventHandlerInterface:
      tags:
        - { name: messenger.message_handler, bus: event.bus }

  App\EventListener\ExceptionEventSubscriber:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  redis_client:
    class: Predis\Client
    arguments:
      - { scheme: tcp, host: '%env(REDIS_HOST)%', port: '%env(REDIS_PORT)%' }

  App\Repository\VisitorRepository:
    arguments:
      $client: '@redis_client'